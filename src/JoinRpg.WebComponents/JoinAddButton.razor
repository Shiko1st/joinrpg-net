<button
  href="#"
  class="@style"
  @onclick="OnClickHappened"
  type="@buttonType"
  disabled="@Disabled"
  title="@Title">
    <span class="glyphicon glyphicon-plus"></span> @Label
</button>
@code {
    [Parameter] public VariationStyleEnum? Variation { get; set; } = VariationStyleEnum.Success;
    [Parameter] public SizeStyleEnum? Size { get; set; }
    [Parameter] public string Label { get; set; } = "Добавить";
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter] public bool Submit { get; set; } = false;
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public string? Title { get; set; } = null;

    private string buttonType => Submit ? "submit" : "button";
    private string style => BootstrapStyle.Build("btn", Variation, Size);

    private async Task OnClickHappened(MouseEventArgs e)
    {
        var oldDisabled = Disabled;
        Disabled = true;
        await OnClick.InvokeAsync(e);
        Disabled = oldDisabled;
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Disabled)
        {
            OnClick = EventCallback<MouseEventArgs>.Empty;
        }
    }

}
